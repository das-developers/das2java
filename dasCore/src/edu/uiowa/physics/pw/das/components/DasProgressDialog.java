/* File: DasProgressDialog.java
 * Copyright (C) 2002-2003 University of Iowa
 * Created by: Jeremy Faden <jbf@space.physics.uiowa.edu>
 *             Jessica Swanner <jessica@space.physics.uiowa.edu>
 *             Edward E. West <eew@space.physics.uiowa.edu>
 *
 * This file is part of the das2 library.
 *
 * das2 is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package edu.uiowa.physics.pw.das.components;

/**
 *
 * @author  eew
 */
public class DasProgressDialog extends javax.swing.JDialog implements edu.uiowa.physics.pw.das.event.DasReaderListener {
    
    /** Creates new form DasProgressDialog */
    public DasProgressDialog(java.awt.Frame f) {
        super(f);
        initComponents();
    }
    
    public DasProgressDialog(java.awt.Dialog d) {
        super(d);
        initComponents();
    }
    
    public DasProgressDialog() {
        super();
        initComponents();
    }
    
    public static DasProgressDialog dialogFor(java.awt.Component c) {
        java.awt.Window w = javax.swing.SwingUtilities.getWindowAncestor(c);
        if (w instanceof java.awt.Dialog) return new DasProgressDialog((java.awt.Dialog)w);
        if (w instanceof java.awt.Frame) return new DasProgressDialog((java.awt.Frame)w);
        return new DasProgressDialog();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        javax.swing.JLabel bigLabel;

        bigLabel = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        progressBar = new javax.swing.JProgressBar();
        kbLabel = new javax.swing.JLabel();

        getContentPane().setLayout(new java.awt.GridLayout(0, 1));

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Loading Data Set");
        setLocationRelativeTo(getOwner());
        setName("progressDialog");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        bigLabel.setBackground(new java.awt.Color(240, 240, 240));
        bigLabel.setFont(new java.awt.Font("Dialog", 1, 18));
        bigLabel.setForeground(java.awt.Color.darkGray);
        bigLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bigLabel.setText("Loading Data Set");
        getContentPane().add(bigLabel);

        bottomPanel.setLayout(new javax.swing.BoxLayout(bottomPanel, javax.swing.BoxLayout.Y_AXIS));

        bottomPanel.setBackground(new java.awt.Color(240, 240, 240));
        bottomPanel.setForeground(java.awt.Color.darkGray);
        progressBar.setBackground(new java.awt.Color(240, 240, 240));
        progressBar.setMaximumSize(progressBar.getPreferredSize());
        progressBar.setMinimumSize(progressBar.getPreferredSize());
        bottomPanel.add(progressBar);

        kbLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        kbLabel.setText("0 kb");
        kbLabel.setAlignmentX(0.5F);
        kbLabel.setMaximumSize(progressBar.getPreferredSize());
        kbLabel.setMinimumSize(progressBar.getPreferredSize());
        kbLabel.setPreferredSize(progressBar.getPreferredSize());
        bottomPanel.add(kbLabel);

        getContentPane().add(bottomPanel);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(404, 106));
        setLocation((screenSize.width-404)/2,(screenSize.height-106)/2);
    }//GEN-END:initComponents
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
    }//GEN-LAST:event_closeDialog
        
    public void readerUpdate(edu.uiowa.physics.pw.das.event.DasReaderEvent e) {
        if (!isVisible()) setVisible(true);
        int b = e.getByteCount();
        int kb = b / 1024;
        progressBar.setValue(kb % 100);
        kbLabel.setText(kb+" kb");
        javax.swing.JPanel content = (javax.swing.JPanel)getContentPane();
        content.paintImmediately(0, 0, content.getWidth(), content.getHeight());
    }    
    
    /**
     * Provided for future compatibility.  Not currently specified
     * by edu.uiowa.physics.pw.das.event.DasReaderListener
     */
    public void readerFinished(edu.uiowa.physics.pw.das.event.DasReaderEvent e) {
        setVisible(false);
        dispose();
    }
    
    /** Shows or hides this component depending on the value of parameter
     * <code>b</code>.
     * @param b  if <code>true</code>, shows this component;
     * otherwise, hides this component
     * @see #isVisible
     * @since JDK1.1
     */
    public void setVisible(boolean b) {
        super.setVisible(b);
    }
    
    public void readerStarted(edu.uiowa.physics.pw.das.event.DasReaderEvent e) {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel kbLabel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JPanel bottomPanel;
    // End of variables declaration//GEN-END:variables
    
}
